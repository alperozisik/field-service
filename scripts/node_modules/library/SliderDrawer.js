/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Button = require('sf-core/ui/button');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Label = require('sf-core/ui/label');


const SliderDrawer = extend(FlexLayout)(
	//constructor
	function(_super, props){
		// initalizes super class for this component scope
		_super(this, props);


		var flUserInfo = new FlexLayout({
			height: 250,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.RELATIVE,
			right: 0,
			paddingBottom: 10,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		this.addChild(flUserInfo);
		
		var flActions = new FlexLayout({
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginBottom: 38,
			marginTop: 2,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		this.addChild(flActions);
		
		var btnSigout = new Button({
			left: 26,
			width: 150,
			height: 15,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			bottom: 22,
			backgroundColor: Color.create(0, 0, 161, 241),
			alpha: 0.5,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create("#FFFFFF"),
			textAlignment: TextAlignment.MIDCENTER,
			visible: true,
			text: "Sign Out"
		});
		btnSigout.font = Font.create("Lato", 12.5, Font.NORMAL); 
		this.addChild(btnSigout);
		this.btnSigout = btnSigout;
		var flDashboard = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 26,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flDashboard);
		this.flDashboard = flDashboard;
		var line = new FlexLayout({
			left: 10,
			height: 0.5,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			right: 10,
			bottom: 0,
			backgroundColor: Color.create("#FFFFFF"),
			alpha: 0.7,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flUserInfo.addChild(line);
		
		var placeholder1 = new FlexLayout({
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 2,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flUserInfo.addChild(placeholder1);
		
		var flCustomers = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 26,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flCustomers);
		this.flCustomers = flCustomers;
		var flNotifications = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 26,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flNotifications);
		
		var flUserImage = new FlexLayout({
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 3,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 255, 255, 255),
			borderWidth: 0,
			borderRadius: 0,
			visible: true
		}); 
		flUserInfo.addChild(flUserImage);
		
		var flUserTexts = new FlexLayout({
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.SPACE_AROUND,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 2,
			paddingTop: 5,
			paddingBottom: 5,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flUserInfo.addChild(flUserTexts);
		
		var flGroupNotifications = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 52,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flGroupNotifications);
		this.flGroupNotifications = flGroupNotifications;
		var flOpenNotifications = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 52,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flOpenNotifications);
		this.flOpenNotifications = flOpenNotifications;
		var flSettings = new FlexLayout({
			height: 22,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.STRETCH,
			justifyContent: FlexLayout.JustifyContent.FLEX_START,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			marginLeft: 26,
			marginTop: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true
		}); 
		flActions.addChild(flSettings);
		this.flSettings = flSettings;
		var imgUserPicture = new ImageView({
			width: 96,
			height: 96,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 255, 255, 255),
			borderWidth: 1,
			borderRadius: 48,
			visible: true,
			image: Image.createFromFile("images://user_picture_test.png"),
			imageFillType: ImageFillType.ASPECTFIT
		}); 
		flUserImage.addChild(imgUserPicture);
		this.imgUserPicture = imgUserPicture;
		var imgNotifications = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_notifications_big.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flNotifications.addChild(imgNotifications);
		
		var lblUserName = new Label({
			height: 27,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDCENTER,
			visible: true,
			text: "<User Name>"
		});
		lblUserName.font = Font.create("Lato", 22.5, Font.NORMAL); 
		flUserTexts.addChild(lblUserName);
		this.lblUserName = lblUserName;
		var imgGroupNotifications = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_notifications_small.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flGroupNotifications.addChild(imgGroupNotifications);
		this.imgGroupNotifications = imgGroupNotifications;
		var imgDashboard = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_dashboard.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flDashboard.addChild(imgDashboard);
		this.imgDashboard = imgDashboard;
		var imgOpenNotifications = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_notifications_small.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flOpenNotifications.addChild(imgOpenNotifications);
		this.imgOpenNotifications = imgOpenNotifications;
		var imgCustomers = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_customer.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flCustomers.addChild(imgCustomers);
		this.imgCustomers = imgCustomers;
		var imgSettings = new ImageView({
			width: 22,
			height: 22,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			visible: true,
			image: Image.createFromFile("images://sliderdrawer_settings.png"),
			imageFillType: ImageFillType.NORMAL
		}); 
		flSettings.addChild(imgSettings);
		this.imgSettings = imgSettings;
		var lblGroupNotifications = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Group Notifications"
		});
		lblGroupNotifications.font = Font.create("Lato", 16, Font.NORMAL); 
		flGroupNotifications.addChild(lblGroupNotifications);
		this.lblGroupNotifications = lblGroupNotifications;
		var lblSettings = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Settings"
		});
		lblSettings.font = Font.create("Lato", 16, Font.NORMAL); 
		flSettings.addChild(lblSettings);
		this.lblSettings = lblSettings;
		var lblNotifications = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Notifications"
		});
		lblNotifications.font = Font.create("Lato", 16, Font.NORMAL); 
		flNotifications.addChild(lblNotifications);
		this.lblNotifications = lblNotifications;
		var lblOpenNotifications = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Open Notifications"
		});
		lblOpenNotifications.font = Font.create("Lato", 16, Font.NORMAL); 
		flOpenNotifications.addChild(lblOpenNotifications);
		this.lblOpenNotifications = lblOpenNotifications;
		var lblCustomers = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Customers"
		});
		lblCustomers.font = Font.create("Lato", 16, Font.NORMAL); 
		flCustomers.addChild(lblCustomers);
		this.lblCustomers = lblCustomers;
		var lblTitle = new Label({
			height: 17,
			positionType: FlexLayout.PositionType.RELATIVE,
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 255, 255, 255),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDCENTER,
			visible: true,
			text: "<Title>"
		});
		lblTitle.font = Font.create("Lato", 14, Font.NORMAL); 
		flUserTexts.addChild(lblTitle);
		this.lblTitle = lblTitle;
		var lblDashboard = new Label({
			positionType: FlexLayout.PositionType.RELATIVE,
			flexGrow: 1,
			marginLeft: 16,
			backgroundColor: Color.create(0, 208, 2, 27),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDLEFT,
			visible: true,
			text: "Dashboard"
		});
		lblDashboard.font = Font.create("Lato", 16, Font.NORMAL); 
		flDashboard.addChild(lblDashboard);
		this.lblDashboard = lblDashboard;
		
		//assign the children to sliderDrawer 
		this.children = Object.assign({}, {
			flUserInfo: flUserInfo,
			flActions: flActions,
			btnSigout: btnSigout
		});
		
		//assign the children of flUserInfo
		flUserInfo.children =  Object.assign({}, {
			line: line,
			placeholder1: placeholder1,
			flUserImage: flUserImage,
			flUserTexts: flUserTexts
		});
		
		//assign the children of flActions
		flActions.children =  Object.assign({}, {
			flDashboard: flDashboard,
			flCustomers: flCustomers,
			flNotifications: flNotifications,
			flGroupNotifications: flGroupNotifications,
			flOpenNotifications: flOpenNotifications,
			flSettings: flSettings
		});
		
		//assign the children of flDashboard
		flDashboard.children =  Object.assign({}, {
			imgDashboard: imgDashboard,
			lblDashboard: lblDashboard
		});
		
		//assign the children of flCustomers
		flCustomers.children =  Object.assign({}, {
			imgCustomers: imgCustomers,
			lblCustomers: lblCustomers
		});
		
		//assign the children of flNotifications
		flNotifications.children =  Object.assign({}, {
			imgNotifications: imgNotifications,
			lblNotifications: lblNotifications
		});
		
		//assign the children of flUserImage
		flUserImage.children =  Object.assign({}, {
			imgUserPicture: imgUserPicture
		});
		
		//assign the children of flUserTexts
		flUserTexts.children =  Object.assign({}, {
			lblUserName: lblUserName,
			lblTitle: lblTitle
		});
		
		//assign the children of flGroupNotifications
		flGroupNotifications.children =  Object.assign({}, {
			imgGroupNotifications: imgGroupNotifications,
			lblGroupNotifications: lblGroupNotifications
		});
		
		//assign the children of flOpenNotifications
		flOpenNotifications.children =  Object.assign({}, {
			imgOpenNotifications: imgOpenNotifications,
			lblOpenNotifications: lblOpenNotifications
		});
		
		//assign the children of flSettings
		flSettings.children =  Object.assign({}, {
			imgSettings: imgSettings,
			lblSettings: lblSettings
		});
	}
);

SliderDrawer.defaults = {
	left: 0,
	top: 0,
	alignContent: FlexLayout.AlignContent.STRETCH,
	alignItems: FlexLayout.AlignItems.STRETCH,
	justifyContent: FlexLayout.JustifyContent.FLEX_START,
	flexWrap: FlexLayout.FlexWrap.NOWRAP,
	flexDirection: FlexLayout.FlexDirection.COLUMN,
	positionType: FlexLayout.PositionType.ABSOLUTE,
	right: 0,
	bottom: 0,
	backgroundColor: Color.create(255, 122, 207, 36),
	alpha: 1,
	borderColor: Color.create(255, 255, 255, 255),
	borderWidth: 0,
	visible: false
 };

module && (module.exports = SliderDrawer);