/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const ActivityIndicator = require('sf-core/ui/activityindicator');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const DialogWait = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flWaitWhiteStyle = getCombinedStyle(".flexLayout", {
			backgroundColor: Color.create("#FFFFFF"),
			alpha: 1,
			borderRadius: 15,
			borderColor: Color.create(255, 255, 255, 255),
			borderWidth: 1,
			marginLeft: 60,
			marginRight: 60,
			height: 150,
			visible: true,
			width: null,
			alignContent: FlexLayout.AlignContent.STRETCH,
			alignItems: FlexLayout.AlignItems.CENTER,
			flexDirection: FlexLayout.FlexDirection.COLUMN,
			flexWrap: FlexLayout.FlexWrap.NOWRAP,
			justifyContent: FlexLayout.JustifyContent.CENTER,
			positionType: FlexLayout.PositionType.RELATIVE
		});
		var flWaitWhite = new FlexLayout(flWaitWhiteStyle);
		this.addChild(flWaitWhite);
		this.flWaitWhite = flWaitWhite;

		const aiWaitStyle = getCombinedStyle(".activityIndicator", {
			backgroundColor: Color.create(0, 255, 255, 255),
			alpha: 1,
			borderColor: Color.create(255, 0, 0, 0),
			borderWidth: 0,
			height: 42,
			visible: true,
			width: 42,
			color: Color.create(255, 44, 50, 57),
			minHeight: 21,
			minWidth: 21,
			positionType: FlexLayout.PositionType.RELATIVE
		});
		var aiWait = new ActivityIndicator(aiWaitStyle);
		flWaitWhite.addChild(aiWait);
		this.aiWait = aiWait;

		const flCheckStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: null,
			left: 0,
			top: 0,
			right: 0,
			bottom: 0,
			backgroundColor: Color.create(0, 255, 255, 255),
			visible: false,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER
		});
		var flCheck = new FlexLayout(flCheckStyle);
		flWaitWhite.addChild(flCheck);
		this.flCheck = flCheck;

		const imgCheckStyle = getCombinedStyle(".imageView", {
			image: Image.createFromFile("images://check.png"),
			width: 150,
			height: 150
		});
		var imgCheck = new ImageView(imgCheckStyle);
		flCheck.addChild(imgCheck);
		this.imgCheck = imgCheck;

		//assign the children to dialogWait 
		this.children = Object.assign({}, {
			flWaitWhite: flWaitWhite
		});
		
		//assign the children of flWaitWhite
		flWaitWhite.children = Object.assign({}, {
			aiWait: aiWait,
			flCheck: flCheck
		});
		
		//assign the children of flCheck
		flCheck.children = Object.assign({}, {
			imgCheck: imgCheck
		});
		
	});

DialogWait.defaults = getCombinedStyle(".flexLayout", {
	backgroundColor: Color.create(204, 0, 0, 0),
	alpha: 1,
	borderColor: Color.create(255, 0, 0, 0),
	borderWidth: 0,
	height: null,
	visible: true,
	width: null,
	alignContent: FlexLayout.AlignContent.STRETCH,
	alignItems: FlexLayout.AlignItems.STRETCH,
	flexDirection: FlexLayout.FlexDirection.COLUMN,
	flexWrap: FlexLayout.FlexWrap.NOWRAP,
	justifyContent: FlexLayout.JustifyContent.CENTER,
	positionType: FlexLayout.PositionType.ABSOLUTE
});

module && (module.exports = DialogWait);